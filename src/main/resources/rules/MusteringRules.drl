package gr.aegean.palaemon.rulesengine.rules;

import gr.aegean.palaemon.rulesengine.model.PassengerAssignment;
import gr.aegean.palaemon.rulesengine.model.Passenger;
import gr.aegean.palaemon.rulesengine.model.Path;
import java.util.List;


global PassengerAssignment passengerAssignment;



rule "assignment_requires_medical_assistance"
    salience 40 //rule order execution
    activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("Deck1") && (geofence.equals("geofence1.1") || geofence.equals("geofence2")  ) )
	    eval($passenger.requiresMedicalAssistance())
	    // passenger health conditions are ok
	then
		passengerAssignment.setAction("WAIT");
		passengerAssignment.setMusterStation("MUSTERSTATION_1");
		passengerAssignment.setPathId("");

end



// rule for Deck1, Geofences 1,2
rule "assignment_r1_d1_g1_g2_existsFreePath_primary"
    salience 30 //rule order execution
    activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("Deck1") && (geofence.equals("geofence1.1") || geofence.equals("geofence2")  ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    eval($availablePath.isPreferred())
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
		System.out.println("Hey It worked!");
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("MUSTERSTATION_1");
		passengerAssignment.setPathId($availablePath.getPathId());
end


// rule for Deck1, Geofences 1,2
rule "assignment_r1_d1_g1_g2_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("Deck1") && (geofence.equals("geofence1.1") || geofence.equals("geofence2")  ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
        eval(!$passenger.requiresMedicalAssistance())
	then
		System.out.println("Hey It worked!");
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("MUSTERSTATION_1");
		passengerAssignment.setPathId($availablePath.getPathId());
end


// rule for Deck7, Geofences 1, 3
rule "assignment_r1_d7_g1_g3_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (geofence.equals("geofence 1") || geofence.equals("geofence 3")  ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
		System.out.println("Hey It worked!");
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("Deck 7, MusterStation 1");
		passengerAssignment.setPathId($availablePath.getPathId());
end


// rule for Deck7, Geofences 6
rule "assignment_d7_g6_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (geofence.equals("geofence 6")   ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_g6_existsFreePath used");
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("Deck 7, Muster Station");
		passengerAssignment.setPathId($availablePath.getPathId());
end


rule "assignment_d7_g5_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (geofence.equals("geofence 5")   ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_g5_existsFreePath used");
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("Deck 7, Muster Station");
		passengerAssignment.setPathId($availablePath.getPathId());
end


// rule for Deck7, Geofences 2
rule "assignment_d7_g2_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (geofence.equals("geofence 2")   ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_g2_existsFreePath used");
	    System.out.println($availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("Deck 7, Muster Station");
		passengerAssignment.setPathId($availablePath.getPathId());
end






// ************************************* REAL RULES **********************************************************



// rule for Deck7,8,9, Geofences 9BG1,S9-8.1,S8-7.1,S7-6.1,7BG4,7BG5,7BG6
rule "assignment_d789_BG1,S9-8.1,S8-7.1,S7-6.1,7BG4,7BG5,7BG6"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger( (deck.equals("7")  || deck.equals("8") || deck.equals("9") )&& (

	    geofence.contains("S9-8.1")
	    ||
	    geofence.contains("S8-7.1")
	    ||
	    geofence.contains("S7-6.1")
	     ||
         geofence.contains("7BG4")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    eval($availablePath.isPreferred())
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule d789_BG1,S9-8.1,S8-7.1,S7-6.1,7BG4,7BG5,7BG6 used");
	    System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end





// rule for Deck7  Geofences ,7BG3,7BG2,7BG5,7BG6
rule "assignment_d789_7BG3,7BG2,7BG5,7BG6"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (
	    geofence.contains("7BG3")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    eval($availablePath.isPreferred())
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d789_7BG3,7BG2,7BG5,7BG6 used");
	    System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end





// rule for Deck7, Geofences 7DG1,7DG2,7DG3,7DG4
rule "assignment_d7_7DG1,7DG2,7DG3,7DG4_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (
	    geofence.contains("7DG1")
	    ||
	    geofence.contains("7DG2")
	    ||
	    geofence.contains("7DG3")
	    ||
	    geofence.contains("7DG4")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    eval($availablePath.isPreferred())
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_7DG1,7DG2,7DG3,7DG4_existsFreePath used");
	    System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7DG4");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end

rule "assignment_d7_7DG1,7DG2,7DG3,7DG4_ALTERNATIVE"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (
	    geofence.contains("7DG1")
	    ||
	    geofence.contains("7DG2")
	    ||
	    geofence.contains("7DG3")
	    ||
	    geofence.contains("7DG4")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    eval($availablePath.isPreferred() == false)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_7DG1,7DG2,7DG3,7DG4_ALTERNATIVE used");
	    System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end









rule "assignment_d7_7DG3,7CG1,7CG2,7BG1,7BG2,7BG6_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(
	    deck.equals("7")
	    && (
	    geofence.contains("7DG3")
	    ||
	    geofence.contains("7CG1")
	    ||
	    geofence.contains("7CG2")
	    ||
	    geofence.contains("7BG1")
	    ||
	    geofence.contains("7BG2")
	    )
	    &&(
	    !geofence.contains("8G")
	    )
	    &&(
	    	    !geofence.contains("S8-7.2")
	    ))
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_7DG3,7CG1,7CG2,7BG1,7BG2,7BG6_existsFreePath used");
	    System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);

end

rule "assignment_d7_7BG1,7BG2,7BG5,7BG6_existsFreePath"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7") && (
	    geofence.contains("7BG1")
	    ||
	    geofence.contains("7BG2")
	    ||
	    geofence.contains("7BG5")
	    ||
	    geofence.contains("7BG6")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule assignment_d7_7BG1,7BG2,7BG5,7BG6_existsFreePath");
	   System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end


rule "d7_medical"
	salience 15 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("7"))
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    // passenger health conditions are ok
	    eval($passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule d7_medical");
	   System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("WAIT");
		passengerAssignment.setMusterStation("7BG6");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end


// ************************************* REAL RULES D9 **********************************************************

rule "D9_Medical"
	salience 15 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("9"))
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    // passenger health conditions are ok
	    eval($passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule D9_Medical");
	   System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("WAIT");
		passengerAssignment.setMusterStation("9CG0");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end


rule "PATH_28"
	salience 21 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	    $passenger: Passenger(deck.equals("9") && (
	    geofence.contains("S9-8.3")
	    ||
	    geofence.contains("9CG0")
	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule PATH_28 used");
	   System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("9CG0");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end



rule "PATH_26"
	salience 20 //rule order execution
	activation-group "x" // group of rules, if one fires successfully no more will be fired
	when
	    //check the deck and geofence
	      $passenger: Passenger(deck.equals("9") && (
       	    geofence.contains("9B")
       	    ||
       	    geofence.contains("9C")
       	    ||
               geofence.contains("CC")
       	    ) )
	    // path geofences are not blocked
	    $availablePath: Path()
	    $blocked: List()
	    $geofence: String()
	    eval( !$availablePath.containsGeofence($blocked) || $availablePath.onlyStartOfPathBlocked($blocked))
	    eval( !($availablePath.getGeofences().get(0) ==null) && $availablePath.getGeofences().get(0).equals($geofence))
	    eval($availablePath.isPreferred())
	    //ensure that if an assignment has already been made
	    //by the execution of a previous rule, we do not re-assign it
	    eval(passengerAssignment.getPathId() == null)
	    // passenger health conditions are ok
	    eval(!$passenger.requiresMedicalAssistance())
	then
	    System.out.println("Rule PATH_26 used");
	   System.out.println("the assigned path id is:" + $availablePath.getPathId());
		passengerAssignment.setAction("FOLLOW");
		passengerAssignment.setMusterStation("9CG0");
		passengerAssignment.setPathId($availablePath.getPathId());
		passengerAssignment.setGeofence($geofence);
end


